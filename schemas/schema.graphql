interface Node {
  id: ID!
}

type PageInfo {
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
  startCursor: String
  endCursor: String
}

type UserConnection {
  pageInfo: PageInfo!
  edges: [UserEdge]
}

type UserEdge {
  node: User
  cursor: String!
}

type User implements Node {
  id: ID!
  _id: String

  nick: String
}

type Viewer implements Node {
  id: ID!

  me: User
  user(id: ID, nick: String): User
  users(
    after: String
    first: Int
    before: String
    last: Int
    ids: [ID]
    idsNotIn: [ID]
    search: String
  ): UserConnection
}

type Query {
  node(
    id: ID!
  ): Node
  viewer: Viewer
}
